/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RecipesRouteImport } from './routes/recipes/route'
import { Route as RecipesIndexImport } from './routes/recipes/index'
import { Route as MealPlannerIndexImport } from './routes/meal-planner/index'
import { Route as RecipesRecipeIdIndexImport } from './routes/recipes/$recipeId/index'
import { Route as RecipesRecipeIdEditRecipeImport } from './routes/recipes/$recipeId/edit-recipe'

// Create/Update Routes

const RecipesRouteRoute = RecipesRouteImport.update({
  path: '/recipes',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIndexRoute = RecipesIndexImport.update({
  path: '/',
  getParentRoute: () => RecipesRouteRoute,
} as any)

const MealPlannerIndexRoute = MealPlannerIndexImport.update({
  path: '/meal-planner/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesRecipeIdIndexRoute = RecipesRecipeIdIndexImport.update({
  path: '/$recipeId/',
  getParentRoute: () => RecipesRouteRoute,
} as any)

const RecipesRecipeIdEditRecipeRoute = RecipesRecipeIdEditRecipeImport.update({
  path: '/$recipeId/edit-recipe',
  getParentRoute: () => RecipesRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/recipes': {
      id: '/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesRouteImport
      parentRoute: typeof rootRoute
    }
    '/meal-planner/': {
      id: '/meal-planner/'
      path: '/meal-planner'
      fullPath: '/meal-planner'
      preLoaderRoute: typeof MealPlannerIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/': {
      id: '/recipes/'
      path: '/'
      fullPath: '/recipes/'
      preLoaderRoute: typeof RecipesIndexImport
      parentRoute: typeof RecipesRouteImport
    }
    '/recipes/$recipeId/edit-recipe': {
      id: '/recipes/$recipeId/edit-recipe'
      path: '/$recipeId/edit-recipe'
      fullPath: '/recipes/$recipeId/edit-recipe'
      preLoaderRoute: typeof RecipesRecipeIdEditRecipeImport
      parentRoute: typeof RecipesRouteImport
    }
    '/recipes/$recipeId/': {
      id: '/recipes/$recipeId/'
      path: '/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof RecipesRecipeIdIndexImport
      parentRoute: typeof RecipesRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  RecipesRouteRoute: RecipesRouteRoute.addChildren({
    RecipesIndexRoute,
    RecipesRecipeIdEditRecipeRoute,
    RecipesRecipeIdIndexRoute,
  }),
  MealPlannerIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/recipes",
        "/meal-planner/"
      ]
    },
    "/recipes": {
      "filePath": "recipes/route.tsx",
      "children": [
        "/recipes/",
        "/recipes/$recipeId/edit-recipe",
        "/recipes/$recipeId/"
      ]
    },
    "/meal-planner/": {
      "filePath": "meal-planner/index.tsx"
    },
    "/recipes/": {
      "filePath": "recipes/index.tsx",
      "parent": "/recipes"
    },
    "/recipes/$recipeId/edit-recipe": {
      "filePath": "recipes/$recipeId/edit-recipe.tsx",
      "parent": "/recipes"
    },
    "/recipes/$recipeId/": {
      "filePath": "recipes/$recipeId/index.tsx",
      "parent": "/recipes"
    }
  }
}
ROUTE_MANIFEST_END */
